// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Game handleClick should match snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Unknown
    competitors={
        Array [
            Object {
              "id": "sr:competitor:2900",
            },
            Object {
              "id": "sr:competitor:1000",
            },
          ]
    }
    fetchTeam={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "competitors": Array [
        Object {
          "id": "sr:competitor:2900",
        },
        Object {
          "id": "sr:competitor:1000",
        },
      ],
      "fetchTeam": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="game"
>
        <button
                class="button team-one"
                value="sr:competitor:2900"
        />
        <p
                class="time"
        />
        <button
                class="button team-two"
                value="sr:competitor:1000"
        />
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="button team-one"
            onClick={[Function]}
            value="sr:competitor:2900"
/>,
          <p
            className="time"
/>,
          <button
            className="button team-two"
            onClick={[Function]}
            value="sr:competitor:1000"
/>,
        ],
        "className": "game",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="button team-one"
            value="sr:competitor:2900"
/>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "button team-one",
            "onClick": [Function],
            "value": "sr:competitor:2900",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "button",
        },
        Object {
          "instance": <p
            class="time"
/>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "time",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "p",
        },
        Object {
          "instance": <button
            class="button team-two"
            value="sr:competitor:1000"
/>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "button team-two",
            "onClick": [Function],
            "value": "sr:competitor:1000",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "competitors": Array [
          Object {
            "id": "sr:competitor:2900",
          },
          Object {
            "id": "sr:competitor:1000",
          },
        ],
        "fetchTeam": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="game"
>
          <button
                    class="button team-one"
                    value="sr:competitor:2900"
          />
          <p
                    class="time"
          />
          <button
                    class="button team-two"
                    value="sr:competitor:1000"
          />
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="button team-one"
              onClick={[Function]}
              value="sr:competitor:2900"
/>,
            <p
              className="time"
/>,
            <button
              className="button team-two"
              onClick={[Function]}
              value="sr:competitor:1000"
/>,
          ],
          "className": "game",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <button
              class="button team-one"
              value="sr:competitor:2900"
/>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "button team-one",
              "onClick": [Function],
              "value": "sr:competitor:2900",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "button",
          },
          Object {
            "instance": <p
              class="time"
/>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "time",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "p",
          },
          Object {
            "instance": <button
              class="button team-two"
              value="sr:competitor:1000"
/>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "button team-two",
              "onClick": [Function],
              "value": "sr:competitor:1000",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
